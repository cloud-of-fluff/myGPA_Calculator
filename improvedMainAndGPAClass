import java.util.Scanner;

public class GradePointCalculatorUpdated {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Scanner userInput = new Scanner (System.in);
		System.out.println("What is your name?");
		String studentName =userInput.nextLine();

		System.out.println("How many classes are you enrolled in?");
		int enrolledNumber = userInput.nextInt();

		GPA_1[] gpaArray = new GPA_1[enrolledNumber];
		
		createArray(gpaArray);
		populateClassNames(gpaArray, userInput);
		populateCreditsWorth(gpaArray, userInput);
		populateLetterGrade(gpaArray, userInput);
		populateGradePoints(gpaArray);
		double totalCreditHours = totalCreditHours(gpaArray);
		double totalGradePoints = totalGradePoints(gpaArray);
		double gpa = actualGPA(totalGradePoints, totalCreditHours);

		System.out.println("\n***********************************************");
		System.out.println("Student Name: " + studentName + "\n");

		gradeDisplay(gpaArray, gpa, totalGradePoints, totalCreditHours, studentName);

		userInput.close();

	}//main
	
	public static void createArray(GPA_1[] gpaArray) {
		
		for (int i =0; i<gpaArray.length; i++) {
			
		 gpaArray[i] = new GPA_1("", 0, "", 0);
		 
		}
	}

	public static void populateClassNames(GPA_1[] gpaArray, Scanner userInput) {

		System.out.println("What classes are you taking?");

		for (int i = 0; i<gpaArray.length; i++) {

			gpaArray[i].setClassName(userInput.next());

		}


	}//classNames

	public static void populateLetterGrade(GPA_1[] gpaArray, Scanner userInput) {

		System.out.println("Expected Letter Grade for each class in the order you listed them:");

		for (int i = 0; i<gpaArray.length; i++) {

			gpaArray[i].setLetterGrade(userInput.next().toUpperCase());

		}

	}

	public static void populateCreditsWorth(GPA_1[] gpaArray, Scanner userInput) {

		System.out.println("Credits Each Class is Worth in the order you listed them:");

		for (int i = 0; i<gpaArray.length; i++) {

			gpaArray[i].setCreditsWorth(userInput.nextInt());

		}

	}

	public static void populateGradePoints(GPA_1[] gpaArray) {

		int credits = 0;
		double numGrade = 0;

		for (int i = 0; i<gpaArray.length; i++) {

			credits = gpaArray[i].getCreditsWorth();
			
			if (gpaArray[i].getLetterGrade().equals("A")) {
				
				numGrade = 4;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("A-")) {
				
				numGrade = 3.67;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("B+")) {
				
				numGrade = 3.33;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("B")) {
				
				numGrade = 3;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("B-")) {
				
				numGrade = 2.67;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("C+")) {
				
				numGrade = 2.33;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("C")) {
				
				numGrade = 2;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("C-")) {
				
				numGrade = 1.67;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("D+")) {
				
				numGrade = 1.33;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("D")) {
				
				numGrade = 1;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("D-")) {
				
				numGrade = 0.67;
				
			}
			
			else if (gpaArray[i].getLetterGrade().equals("F")){
				
				numGrade = 0;
				
			}
			
			else {
				
				System.out.println("Invalid Grade Entry, Please Program Run Again");
				
			}

			gpaArray[i].setGradePoints(credits*numGrade);

		}

	}//set grade points

	public static double totalGradePoints(GPA_1[] gpaArray) {

		double totalGradePoints =  0;
		for (int i=0; i<gpaArray.length; i++) {

			totalGradePoints = totalGradePoints + gpaArray[i].getGradePoints();

		}
		return totalGradePoints;
		
	}//find grade points

	public static double totalCreditHours(GPA_1[] gpaArray) {

		double totalCreditHours = 0;
		for (int i=0; i<gpaArray.length; i++) {

			totalCreditHours = totalCreditHours + gpaArray[i].getCreditsWorth();

		}
		return totalCreditHours;
		
	}//find credit hours

	public static double actualGPA(double totalGradePoints, double totalCreditHours) {

		double gpa = totalGradePoints/totalCreditHours;
		return gpa;

	}//findGPA

	public static void gradeDisplay(GPA_1[] gpaArray, double GPA, double totalGradePoints, double totalCreditHours, String studentName) {

		System.out.println("Class Information:");

		for (int i=0; i<gpaArray.length; i++) {

			System.out.println("----------------------------------------");
			System.out.println("Name of Class: " + gpaArray[i].getClassName());
			System.out.println("Number of Credit Hours: " + gpaArray[i].getCreditsWorth());
			System.out.println("Expected Letter Grade: " + gpaArray[i].getLetterGrade());
		}



		System.out.println("                                             ");
		System.out.println("*********************************************");
		System.out.println("                 GPA Calculator              ");
		System.out.println("*********************************************");
		System.out.println("                                             ");
		System.out.println("Class\t\tCredit\tExpected\tGrade ");
		System.out.println("\t\tHours\tGrade\t\tPoints");
		System.out.println("------------------------------------------------------------");

		for (int i=0; i<gpaArray.length; i++) {
			
			System.out.printf("%.9s    \t%d\t%s\t\t%.2f\n", gpaArray[i].getClassName(), gpaArray[i].getCreditsWorth(), gpaArray[i].getLetterGrade(),
					gpaArray[i].getGradePoints());
			System.out.println("------------------------------------------------------------");
		}

		System.out.println("Totals:	\t"+ totalCreditHours + "\t\t\t"+ totalGradePoints);
		System.out.println("                                                       ");
		System.out.println(studentName + " your projected GPA for all of your classes is: ");
		System.out.printf("%.3f", GPA);

	}//gradeDisplay

}//GPA Calculator Updated

class GPA_1 {

	private String className;
	private String letterGrade;
	private int creditsWorth;
	private double gradePoints;

	public GPA_1(String className, int creditsWorth, String letterGrade, double gradePoints){

		this.className=className;
		this.letterGrade=letterGrade;
		this.creditsWorth=creditsWorth;
		this.gradePoints=gradePoints;

	}//GPA 1 constructor

	public String getClassName() {
		return className;
	}

	public String getLetterGrade() {
		return letterGrade;
	}

	public int getCreditsWorth() {
		return creditsWorth;
	}

	public double getGradePoints() {
		return gradePoints;
	}

	public void setClassName(String incomingName) {
		className = incomingName;
	}

	public void setLetterGrade(String incomingLetter) {
		letterGrade = incomingLetter;
	}

	public void setCreditsWorth(int incomingCredits) {
		creditsWorth = incomingCredits;
	}

	public void setGradePoints(double incomingGradePoints) {
		gradePoints = incomingGradePoints;
	}

}//GPA Class
